@model Project_Echo.Models.MarkdownViewModel
@using Project_Echo.Helpers
@{
    ViewData["Title"] = Model.DocumentTitle;
}

<div class="documentation-page">
    <div class="page-container">
        <div class="breadcrumb-path">
            <span>Documentation</span><span>@Model.DocumentTitle</span>
        </div>
        <div class="documentation-viewer">
            <div class="doc-navigation">
                <div class="filter-bar">
                    <svg class="filter-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"></polygon>
                    </svg>
                    <input type="text" id="filter-input" placeholder="Filtrar por tÃ­tulo">
                </div>
                @foreach (var link in Model.NavigationLinks)
                {
                    string isActiveClass = "";
                    if (SidebarHelper.IsActivePage(link.Url, Context.Request.Path.Value))
                    {
                        isActiveClass = "active";
                    }
                    <a href="@link.Url" class="doc-nav-item @isActiveClass">@link.Title</a>
                }
            </div>
            <div class="doc-content">
                <div id="markdown-content">
                    <!-- Markdown content will be rendered here -->
                </div>
            </div>
        </div>
    </div>
</div>
<styles src="site.css" />

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Get the markdown content from the model
            var markdownContent = @Html.Raw(Json.Serialize(Model.MarkdownContent));
            
            // Render the markdown content
            document.getElementById('markdown-content').innerHTML = marked.parse(markdownContent);
            
            // Filter navigation links (This part remains client-side)
            var filterInput = document.getElementById('filter-input');
            filterInput.addEventListener('keyup', function() {
                var filterText = filterInput.value.toLowerCase();
                var navLinks = document.querySelectorAll('.doc-nav-item');
                navLinks.forEach(function(link) {
                    var linkText = link.textContent.toLowerCase();
                    if (linkText.includes(filterText)) {
                        link.style.display = '';
                    } else {
                        link.style.display = 'none';
                    }
                });
            });
        });
    </script>
}

<style>
    :root {
        --color-bg-dark: #000000;
        --color-surface-dark: rgba(20, 20, 20, 0.7);
        --color-text-light: #F0F0F0;
        --color-text-medium: #B0B0B0;
        --color-text-dark: #808080;
        --color-accent-blue: #ffffff3f;
        --color-border-dark: #404040;
        --shadow-elevation-1: 0 2px 4px rgba(0, 0, 0, 0.4);
        --shadow-elevation-2: 0 4px 8px rgba(0, 0, 0, 0.6);
        --border-radius-sm: 4px;
        --spacing-xs: 4px;
        --spacing-sm: 8px;
        --spacing-md: 16px;
        --spacing-lg: 24px;
        --font-family-sans: 'Inter', Tahoma, Geneva, Verdana, sans-serif;
        --font-family-mono: 'Cascadia Code', 'Fira Code', 'Consolas', 'monospace';
    }

    body {
        background-color: var(--color-bg-dark);
        color: var(--color-text-light);
        font-family: var(--font-family-sans);
        line-height: 1.6;
    }

    .documentation-page {
        padding: var(--spacing-lg) 0;
    }

    .page-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 var(--spacing-md);
    }

    .breadcrumb-path {
        background-color: var(--color-surface-dark);
        backdrop-filter: blur(8px);
        padding: var(--spacing-sm) var(--spacing-md);
        border-radius: var(--border-radius-sm);
        box-shadow: var(--shadow-elevation-1);
        margin-bottom: var(--spacing-md);
        color: var(--color-text-medium);
        font-size: 0.9em;
    }

    .breadcrumb-path span {
        color: var(--color-text-light);
    }

    .breadcrumb-path span:not(:last-child)::after {
        content: ' / ';
        color: var(--color-text-dark);
        margin: 0 4px;
    }

    .documentation-viewer {
        display: flex;
        gap: var(--spacing-lg);
        margin-top: var(--spacing-lg);
    }

    .doc-navigation {
        width: 280px;
        flex-shrink: 0;
        background-color: var(--color-surface-dark);
        backdrop-filter: blur(8px);
        border-radius: var(--border-radius-sm);
        box-shadow: var(--shadow-elevation-1);
        padding: var(--spacing-md) var(--spacing-sm);
        display: flex;
        flex-direction: column;
        overflow-y: auto;
        max-height: calc(100vh - 100px);
        scrollbar-width: none; /* Firefox */
        -ms-overflow-style: none; /* IE and Edge */
    }

    .doc-navigation::-webkit-scrollbar {
        display: none; /* Chrome, Safari and Opera */
    }

    .filter-bar {
        display: flex;
        align-items: center;
        background-color: rgba(0, 0, 0, 0.3);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        border-radius: var(--border-radius-sm);
        padding: var(--spacing-xs) var(--spacing-sm);
        margin-bottom: var(--spacing-md);
        border: 1px solid var(--color-border-dark);
    }

    .filter-bar input {
        flex: 1;
        background: none;
        border: none;
        color: var(--color-text-light);
        padding: 0;
        margin-left: var(--spacing-sm);
        outline: none;
        font-size: 0.9em;
    }

    .filter-bar input::placeholder {
        color: var(--color-text-dark);
    }

    .filter-icon {
        color: var(--color-text-dark);
        font-size: 0.9em;
    }

    .doc-nav-item {
        padding: var(--spacing-sm) var(--spacing-md);
        color: var(--color-text-medium);
        text-decoration: none;
        border-radius: var(--border-radius-sm);
        transition: background-color 0.2s ease, color 0.2s ease;
        font-size: 0.95em;
    }

    .doc-nav-item:hover {
        background-color: rgba(255, 255, 255, 0.08);
        color: var(--color-text-light);
    }

    .doc-nav-item.active {
        background-color: var(--color-accent-blue);
        color: #FFFFFF;
        font-weight: 600;
        box-shadow: var(--shadow-elevation-1);
    }

    .doc-content {
        flex: 1;
        background-color: var(--color-surface-dark);
        backdrop-filter: blur(8px);
        border-radius: var(--border-radius-sm);
        box-shadow: var(--shadow-elevation-2);
        padding: var(--spacing-lg);
        overflow-y: auto;
        max-height: calc(100vh - 100px);
        scrollbar-width: none; /* Firefox */
        -ms-overflow-style: none; /* IE and Edge */
    }

    .doc-content::-webkit-scrollbar {
        display: none; /* Chrome, Safari and Opera */
    }

    /* Markdown content styling */
    #markdown-content {
        color: var(--color-text-light);
        line-height: 1.8;
        font-size: 1.05em;
        overflow-x: auto; /* Add horizontal scrolling for overflowing content */
    }

    #markdown-content h1,
    #markdown-content h2,
    #markdown-content h3,
    #markdown-content h4,
    #markdown-content h5,
    #markdown-content h6 {
        color: var(--color-text-light);
        margin-top: var(--spacing-lg);
        margin-bottom: var(--spacing-sm);
        line-height: 1.2;
    }

    #markdown-content h1 {
        font-size: 2.4em;
        border-bottom: 1px solid var(--color-border-dark);
        padding-bottom: var(--spacing-sm);
    }

    #markdown-content h2 {
        font-size: 2em;
        border-bottom: 1px solid var(--color-border-dark);
        padding-bottom: var(--spacing-xs);
    }

    #markdown-content h3 {
        font-size: 1.6em;
    }

    #markdown-content h4 {
        font-size: 1.3em;
    }

    #markdown-content p {
        margin-bottom: var(--spacing-md);
    }

    #markdown-content ul,
    #markdown-content ol {
        margin-bottom: var(--spacing-md);
        padding-left: var(--spacing-lg);
    }

    #markdown-content li {
        margin-bottom: var(--spacing-xs);
    }

    #markdown-content code {
        font-family: var(--font-family-mono);
        background-color: rgba(0, 0, 0, 0.3);
        padding: 2px 6px;
        border-radius: var(--border-radius-sm);
        font-size: 0.9em;
    }

    #markdown-content pre {
        background-color: rgba(0, 0, 0, 0.4);
        padding: var(--spacing-md);
        border-radius: var(--border-radius-sm);
        overflow-x: auto;
        margin-bottom: var(--spacing-md);
        border: 1px solid var(--color-border-dark);
    }

    #markdown-content pre code {
        background-color: transparent;
        padding: 0;
    }

    #markdown-content a {
        color: var(--color-accent-blue);
        text-decoration: none;
        transition: color 0.2s ease;
    }

    #markdown-content a:hover {
        text-decoration: underline;
        color: #60BFFF;
    }

    #markdown-content blockquote {
        border-left: 4px solid var(--color-accent-blue);
        padding-left: var(--spacing-md);
        margin-left: 0;
        margin-bottom: var(--spacing-md);
        color: var(--color-text-dark);
        background-color: rgba(0, 122, 204, 0.1); /* Light blue background for quotes */
        border-radius: var(--border-radius-sm);
        padding-top: var(--spacing-sm);
        padding-bottom: var(--spacing-sm);
    }

    #markdown-content table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: var(--spacing-md);
        box-shadow: var(--shadow-elevation-1);
        border-radius: var(--border-radius-sm);
        overflow: hidden; /* Ensures rounded corners */
    }

    #markdown-content th,
    #markdown-content td {
        border: 1px solid var(--color-border-dark);
        padding: var(--spacing-sm) var(--spacing-md);
        text-align: left;
    }

    #markdown-content th {
        background-color: var(--color-bg-dark);
        color: var(--color-text-light);
        font-weight: 600;
    }

    #markdown-content tr:nth-child(even) {
        background-color: rgba(0, 0, 0, 0.1); /* Subtle stripe for table rows */
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .documentation-viewer {
            flex-direction: column;
        }
        
        .doc-navigation {
            width: 100%;
            order: -1;
            max-height: 250px; /* Limit height on mobile */
        }
        
        .filter-bar {
            margin-bottom: var(--spacing-sm);
        }

        .doc-nav-item {
            padding: var(--spacing-xs) var(--spacing-md);
            text-align: left;
        }
        
        .doc-content {
            max-height: none;
        }

        .page-container {
            padding: 0 var(--spacing-sm);
        }

        .breadcrumb-path {
            padding: var(--spacing-sm);
            font-size: 0.85em;
        }
    }

    /* Custom Scrollbar Styling */
    .doc-navigation::-webkit-scrollbar,
    .doc-content::-webkit-scrollbar {
        width: 8px;
    }

    .doc-navigation::-webkit-scrollbar-track,
    .doc-content::-webkit-scrollbar-track {
        background: var(--color-surface-dark);
        border-radius: 4px;
    }

    .doc-navigation::-webkit-scrollbar-thumb,
    .doc-content::-webkit-scrollbar-thumb {
        background: var(--color-accent-blue);
        border-radius: 4px;
        transition: background 0.2s ease;
    }

    .doc-navigation::-webkit-scrollbar-thumb:hover,
    .doc-content::-webkit-scrollbar-thumb:hover {
        background: rgba(255, 255, 255, 0.5);
    }

    /* Firefox scrollbar styling */
    .doc-navigation,
    .doc-content {
        scrollbar-width: thin;
        scrollbar-color: var(--color-accent-blue) var(--color-surface-dark);
    }
</style> 